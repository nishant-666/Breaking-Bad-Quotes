{"version":3,"sources":["components/cards.js","App.js","reportWebVitals.js","index.js"],"names":["Cards","useState","quotes","setQuotes","Card","className","map","data","quote","author","Button","color","onClick","axios","get","then","quotesData","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6RAIe,SAASA,IACpB,MAA4BC,mBAAS,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KAQA,OACI,8BACI,eAACC,EAAA,EAAD,CAAMC,UAAU,YAAhB,UACI,oBAAIA,UAAU,QAAd,iCAECH,EAAOI,KAAI,SAACC,GACT,OACI,gCACI,mBAAGF,UAAU,SAAb,SAAuBE,EAAKC,QAC5B,oBAAGH,UAAU,YAAb,eAA4BE,EAAKE,gBAK7C,cAACC,EAAA,EAAD,CACIC,MAAM,OACNC,QAvBI,WAChBC,IAAMC,IAAN,uDACKC,MAAK,SAACC,GACHb,EAAUa,EAAWT,UAkBrB,sCCjBDU,MARf,WACE,OACE,qBAAKZ,UAAU,OAAf,SACE,cAACL,EAAD,OCOSkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBL,MAAK,YAAkD,IAA/CM,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,OCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.e021a0dc.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { Card, Button } from 'semantic-ui-react';\r\nimport axios from 'axios';\r\n\r\nexport default function Cards() {\r\n    const [quotes, setQuotes] = useState([]);\r\n    const fetchQuotes = () => {\r\n        axios.get(`https://breaking-bad-quotes.herokuapp.com/v1/quotes`)\r\n            .then((quotesData) => {\r\n                setQuotes(quotesData.data)\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Card className=\"card-main\">\r\n                <h4 className=\"title\">Breaking Bad Quotes</h4>\r\n\r\n                {quotes.map((data) => {\r\n                    return (\r\n                        <div>\r\n                            <p className=\"quotes\">{data.quote}</p>\r\n                            <p className=\"quotes-by\">- {data.author}</p>\r\n                        </div>\r\n                    )\r\n                })}\r\n\r\n                <Button\r\n                    color=\"blue\"\r\n                    onClick={fetchQuotes}\r\n                >\r\n                    Click me for quotes\r\n                </Button>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n","import './App.css';\nimport Cards from './components/cards';\nfunction App() {\n  return (\n    <div className=\"main\">\n      <Cards/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'semantic-ui-css/semantic.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}